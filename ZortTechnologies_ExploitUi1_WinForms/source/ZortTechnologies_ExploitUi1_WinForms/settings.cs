using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ZortTechnologies_ExploitUi1_WinForms
{
    public partial class settings : Form
    {
        public settings()
        {
            InitializeComponent();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }
        Form1 frm1 = new Form1();
        private void settings_Load(object sender, EventArgs e)
        {
            label1.Text = "Orginal Source By Tuaxa#9999 Edited By "+ frm1.dcad;
            this.Text = frm1.omgname+"_Settings";
            this.TopMost = ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.topmost;
            comboBox1.SelectedIndex = ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.api-1;
            comboBox2.SelectedIndex = ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.texteditor;
            checkBox1.Checked = ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.topmost;
            checkBox2.Checked = ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.performancemode;
            //checkBox2
        }

        private void label4_Click(object sender, EventArgs e)
        {

        }
        api piroapi = new api();
        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox1.SelectedIndex == null)
            {
                piroapi.changeapi(0);
            }
            else
            {
                //MessageBox.Show(comboBox1.SelectedIndex + 1.ToString());
                piroapi.changeapi(comboBox1.SelectedIndex + 1);
            }
        }

        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox2.SelectedIndex == 0)
            {
                ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.texteditor = 1;
                //0 = monaco
            }
            else if (comboBox2.SelectedIndex == 1)
            {
                ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.texteditor = 0;

            }
            else
            {
                ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.texteditor = 0;

            }
        }

        private void label5_Click(object sender, EventArgs e)
        {

        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            if(checkBox1.Checked == true)
            {
                ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.topmost = checkBox1.Checked;
            }
            else
            {
                ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.topmost = checkBox1.Checked;
            }
        }

        private void bunifuFlatButton4_Click(object sender, EventArgs e)
        {
            this.Hide();
            frm1.Show();
        }
        //credits : stackowerflowmharti
        public const int WM_NCLBUTTONDOWN = 0xA1;
        public const int HT_CAPTION = 0x2;

        [System.Runtime.InteropServices.DllImport("user32.dll")]
        public static extern int SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam);
        [System.Runtime.InteropServices.DllImport("user32.dll")]
        public static extern bool ReleaseCapture();
  
        private void settings_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                ReleaseCapture();
                SendMessage(Handle, WM_NCLBUTTONDOWN, HT_CAPTION, 0);
            }
        }



        private void panel1_Paint_1(object sender, PaintEventArgs e)
        {

        }

        private void panel1_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                ReleaseCapture();
                SendMessage(Handle, WM_NCLBUTTONDOWN, HT_CAPTION, 0);
            }
        }

        private void checkBox2_CheckedChanged(object sender, EventArgs e)
        {
            //permode
            if (checkBox2.Checked == true)
            {
                ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.topmost = checkBox2.Checked;
            }
            else
            {
                ZortTechnologies_ExploitUi1_WinForms.Properties.Settings.Default.topmost = checkBox2.Checked;
            }
        }
    }
}
